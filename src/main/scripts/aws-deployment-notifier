#!/usr/bin/env python
# AWS Deployment Notifier - Automate your Stack Updates!
# Copyright 2015 Immobilien Scout GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Use to trigger update for STACK_NAME with AMI_ID.
Publishes deployment message on SNS topic and waits for corresponding result message on SQS queue.

Usage:
    aws-deploy SNS_ARN QUEUE_NAME QUEUE_ACCOUNT STACK_NAME AMI_ID

"""

import sys
import logging

from docopt import docopt

from dnot import Notifier, Receiver

logging.basicConfig(format='%(asctime)s %(name)s %(levelname)s %(message)s', datefmt='%Y-%m-%dT%H:%M:%S', level=logging.INFO)
logger = logging.getLogger(__name__)

arguments = docopt(__doc__)

sns_topic_arn = arguments["SNS_ARN"]
queue_name = arguments["QUEUE_NAME"]
queue_account = arguments["QUEUE_ACCOUNT"]
stack_name = arguments["STACK_NAME"]
ami_id = arguments["AMI_ID"]


try:
    Notifier(sns_topic_arn=sns_topic_arn, stack_name=stack_name, ami_id=ami_id).publish()
    Receiver(queue_name=queue_name, queue_account=queue_account, stack_name=stack_name).poll()
except Exception as e:
    logger.exception(e)
    sys.exit(1)
